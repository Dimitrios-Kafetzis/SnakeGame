<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Users\Δημήτρης\Desktop\ELEC5451M-resources\StellarisWare\Display_Switch_Snake game\Display_Switch.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Users\Δημήτρης\Desktop\ELEC5451M-resources\StellarisWare\Display_Switch_Snake game\Display_Switch.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 791]: Last Updated: Mon Dec 17 21:32:35 2012
<BR><P>
<H3>Maximum Stack Usage =        168 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SysTick_Handler &rArr; fruitCollisionDetection &rArr; fruitGeneration &rArr; randRangeNum &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[9]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1b]">SSIDataPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">SSIDataPut</a><BR>
 <LI><a href="#[d]">Delay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">Delay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
 <LI><a href="#[7]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">FaultISR</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[5]">GPIOPortG_Handler</a> from display_switch_main.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup.o(RESET) referenced 119 times from startup.o(RESET)
 <LI><a href="#[7]">IntDefaultHandler</a> from interrupt.o(i.IntDefaultHandler) referenced from interrupt.o(i.IntUnregister)
 <LI><a href="#[1]">NmiSR</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[9]">Reset_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[4]">SysTick_Handler</a> from display_switch_main.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[8]">fputc</a> from output.o(.text) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[6]">main</a> from display_switch_main.o(.text) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[9]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[72]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[73]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[74]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[d]"></a>Delay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, display_switch_main.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snakeGameInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GameOver
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printScore
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[75]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[76]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[6e]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[77]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[78]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[79]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[e]"></a>shiftEverythingUp</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, output.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = shiftEverythingUp &rArr; RIT128x96x4StringDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4StringDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[8]"></a>fputc</STRONG> (Thumb, 640 bytes, Stack size 16 bytes, output.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = fputc &rArr; shiftEverythingUp &rArr; RIT128x96x4StringDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4StringDraw
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shiftEverythingUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[7a]"></a>fgetc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, output.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, output.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>Output_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, output.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Output_Init &rArr; RIT128x96x4Init &rArr; RIT128x96x4Enable &rArr; GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>Output_Clear</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, output.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
</UL>

<P><STRONG><a name="[14]"></a>Output_Off</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, output.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4DisplayOff
</UL>

<P><STRONG><a name="[16]"></a>Output_On</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, output.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4DisplayOn
</UL>

<P><STRONG><a name="[3e]"></a>Output_Color</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, output.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;levelChoice
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printScore
</UL>

<P><STRONG><a name="[13]"></a>RIT128x96x4Clear</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RIT128x96x4Clear &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snakeGameInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GameOver
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Clear
</UL>

<P><STRONG><a name="[f]"></a>RIT128x96x4StringDraw</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RIT128x96x4StringDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snakeGameInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GameOver
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shiftEverythingUp
</UL>

<P><STRONG><a name="[1d]"></a>RIT128x96x4ImageDraw</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RIT128x96x4ImageDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSnake
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fruitGeneration
</UL>

<P><STRONG><a name="[1e]"></a>RIT128x96x4Enable</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RIT128x96x4Enable &rArr; GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIEnable
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDisable
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIConfigSetExpClk
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>

<P><STRONG><a name="[25]"></a>RIT128x96x4Disable</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, rit128x96x4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDisable
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGetNonBlocking
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[11]"></a>RIT128x96x4Init</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RIT128x96x4Init &rArr; RIT128x96x4Enable &rArr; GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Init
</UL>

<P><STRONG><a name="[17]"></a>RIT128x96x4DisplayOn</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rit128x96x4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_On
</UL>

<P><STRONG><a name="[15]"></a>RIT128x96x4DisplayOff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rit128x96x4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Off
</UL>

<P><STRONG><a name="[29]"></a>EdgeCounter_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EdgeCounter_Init &rArr; IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntPrioritySet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntEnable
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntClear
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>PORTG_Init</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, display_switch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>LED_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, display_switch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>SysTick_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Init &rArr; IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>LED_ON</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, display_switch_main.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>LED_OFF</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, display_switch_main.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>randRangeNum</STRONG> (Thumb, 86 bytes, Stack size 56 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = randRangeNum &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fruitGeneration
</UL>

<P><STRONG><a name="[3c]"></a>fruitGeneration</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = fruitGeneration &rArr; randRangeNum &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randRangeNum
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fruitCollisionDetection
</UL>

<P><STRONG><a name="[3d]"></a>printScore</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = printScore &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Color
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fruitCollisionDetection
</UL>

<P><STRONG><a name="[40]"></a>fruitCollisionDetection</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = fruitCollisionDetection &rArr; fruitGeneration &rArr; randRangeNum &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printScore
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fruitGeneration
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[42]"></a>motion</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, display_switch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSnake
</UL>

<P><STRONG><a name="[41]"></a>drawSnake</STRONG> (Thumb, 272 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = drawSnake &rArr; RIT128x96x4ImageDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[43]"></a>GameOver</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GameOver &rArr; RIT128x96x4StringDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4StringDraw
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bodyCollisionDetection
</UL>

<P><STRONG><a name="[44]"></a>bodyCollisionDetection</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bodyCollisionDetection &rArr; GameOver &rArr; RIT128x96x4StringDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GameOver
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[45]"></a>levelChoice</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = levelChoice &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Color
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortG_Handler
</UL>

<P><STRONG><a name="[5]"></a>GPIOPortG_Handler</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOPortG_Handler &rArr; levelChoice &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntStatus
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntClear
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;levelChoice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>snakeGameInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = snakeGameInit &rArr; RIT128x96x4StringDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4StringDraw
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SysTick_Handler &rArr; fruitCollisionDetection &rArr; fruitGeneration &rArr; randRangeNum &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bodyCollisionDetection
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSnake
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fruitCollisionDetection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>main</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, display_switch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = main &rArr; fruitGeneration &rArr; randRangeNum &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snakeGameInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fruitGeneration
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTG_Init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EdgeCounter_Init
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[51]"></a>GPIODirModeSet</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUSBDigital
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUSBAnalog
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeTimer
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeQEI
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePECITx
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePECIRx
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeLPC
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2S
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2CSCL
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutputOD
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeFan
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeEthernetMII
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeEthernetLED
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeEPI
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeComparator
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeADC
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>

<P><STRONG><a name="[7e]"></a>GPIODirModeGet</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>GPIOIntTypeSet</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIOIntTypeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EdgeCounter_Init
</UL>

<P><STRONG><a name="[7f]"></a>GPIOIntTypeGet</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>GPIOPadConfigSet</STRONG> (Thumb, 306 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUSBDigital
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUSBAnalog
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeTimer
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeQEI
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePECITx
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePECIRx
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeLPC
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2S
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2CSCL
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutputOD
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeFan
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeEthernetMII
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeEthernetLED
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeEPI
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeComparator
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeADC
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>

<P><STRONG><a name="[80]"></a>GPIOPadConfigGet</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>GPIOPinIntEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EdgeCounter_Init
</UL>

<P><STRONG><a name="[81]"></a>GPIOPinIntDisable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>GPIOPinIntStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortG_Handler
</UL>

<P><STRONG><a name="[2b]"></a>GPIOPinIntClear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EdgeCounter_Init
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortG_Handler
</UL>

<P><STRONG><a name="[4a]"></a>GPIOPortIntRegister</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntRegister
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOGetIntNumber
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>

<P><STRONG><a name="[4d]"></a>GPIOPortIntUnregister</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntUnregister
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOGetIntNumber
</UL>

<P><STRONG><a name="[82]"></a>GPIOPinRead</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>GPIOPinWrite</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>

<P><STRONG><a name="[50]"></a>GPIOPinTypeADC</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[52]"></a>GPIOPinTypeCAN</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[53]"></a>GPIOPinTypeComparator</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[54]"></a>GPIOPinTypeEPI</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[55]"></a>GPIOPinTypeEthernetLED</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[56]"></a>GPIOPinTypeEthernetMII</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[57]"></a>GPIOPinTypeFan</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[58]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[27]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>

<P><STRONG><a name="[59]"></a>GPIOPinTypeGPIOOutputOD</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[5a]"></a>GPIOPinTypeI2C</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[5b]"></a>GPIOPinTypeI2CSCL</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[5c]"></a>GPIOPinTypeI2S</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[5d]"></a>GPIOPinTypeLPC</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[5e]"></a>GPIOPinTypePECIRx</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[5f]"></a>GPIOPinTypePECITx</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[60]"></a>GPIOPinTypePWM</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[61]"></a>GPIOPinTypeQEI</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[22]"></a>GPIOPinTypeSSI</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>

<P><STRONG><a name="[62]"></a>GPIOPinTypeTimer</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[63]"></a>GPIOPinTypeUART</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[64]"></a>GPIOPinTypeUSBAnalog</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[65]"></a>GPIOPinTypeUSBDigital</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[83]"></a>GPIOPinConfigure</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>GPIODMATriggerEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>GPIODMATriggerDisable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>GPIOADCTriggerEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>GPIOADCTriggerDisable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randRangeNum
</UL>

<P><STRONG><a name="[88]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_dadd</STRONG> (Thumb, 320 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randRangeNum
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_dmul</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randRangeNum
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randRangeNum
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randRangeNum
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randRangeNum
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_d2uiz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dfixui.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randRangeNum
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8c]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[68]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[8e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>IntDisable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntDisable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortIntUnregister
</UL>

<P><STRONG><a name="[2e]"></a>IntEnable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortIntRegister
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EdgeCounter_Init
</UL>

<P><STRONG><a name="[2f]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EdgeCounter_Init
</UL>

<P><STRONG><a name="[2d]"></a>IntPrioritySet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, interrupt.o(i.IntPrioritySet))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EdgeCounter_Init
</UL>

<P><STRONG><a name="[4c]"></a>IntRegister</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, interrupt.o(i.IntRegister), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortIntRegister
</UL>

<P><STRONG><a name="[4f]"></a>IntUnregister</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, interrupt.o(i.IntUnregister), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortIntUnregister
</UL>

<P><STRONG><a name="[19]"></a>SSIBusy</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ssi.o(i.SSIBusy))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>

<P><STRONG><a name="[21]"></a>SSIConfigSetExpClk</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, ssi.o(i.SSIConfigSetExpClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSIConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
</UL>

<P><STRONG><a name="[26]"></a>SSIDataGetNonBlocking</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ssi.o(i.SSIDataGetNonBlocking), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
</UL>

<P><STRONG><a name="[1b]"></a>SSIDataPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ssi.o(i.SSIDataPut))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>

<P><STRONG><a name="[1f]"></a>SSIDisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssi.o(i.SSIDisable))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
</UL>

<P><STRONG><a name="[24]"></a>SSIEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssi.o(i.SSIEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
</UL>

<P><STRONG><a name="[20]"></a>SysCtlClockGet</STRONG> (Thumb, 514 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
</UL>

<P><STRONG><a name="[28]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>

<P><STRONG><a name="[33]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[32]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[31]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[6f]"></a>__0printf$3</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[91]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[3f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;levelChoice
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printScore
</UL>

<P><STRONG><a name="[92]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[93]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[94]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RITWriteCommand</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RITWriteCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4StringDraw
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4DisplayOn
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4DisplayOff
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
</UL>

<P><STRONG><a name="[1c]"></a>RITWriteData</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4StringDraw
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
</UL>

<P><STRONG><a name="[4b]"></a>GPIOGetIntNumber</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortIntUnregister
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortIntRegister
</UL>

<P><STRONG><a name="[7]"></a>IntDefaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.IntDefaultHandler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> interrupt.o(i.IntUnregister)
</UL>
<P><STRONG><a name="[70]"></a>_printf_core</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
